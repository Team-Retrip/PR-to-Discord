name: 'PR to Discord'
author: 'Team-Retrip'
description: 'sends PR notifications to Discord.'
branding:
  icon: 'award'
  color: 'blue'

inputs:
  discord_webhook_url:
    description: 'webhook URL of a Discord channel.'
    required: true
  pull_request:
    description: 'Pull request json.'
    required: false
    default: ${{ toJson(github.event.pull_request) }}

runs:
  using: 'composite'
  steps:
    - shell: bash
      env:
        BODY: ${{ toJson(fromJson(inputs.pull_request).body) }}
        USERNAME: ${{ toJson(fromJson(inputs.pull_request).user.login) }}
        AVATAR_URL: ${{ toJson(fromJson(inputs.pull_request).user.avatar_url) }}
        TITLE: ${{ toJson(fromJson(inputs.pull_request).title) }}
        URL: ${{ toJson(fromJson(inputs.pull_request).html_url) }}
        ASSIGNEES: ${{ toJson(fromJson(inputs.pull_request).assignees) }}
      run: |
        PROBLEM=$(
          echo $BODY |
          grep -Pio 'http[\w\:\/\.\-\?\=\&]+' |
          head -1 ||
          echo "$URL" |
          tr -d '"'
        );
        MENTIONS=$(
          echo $ASSIGNEES | 
          jq -r '.[] | "@"+.login' | 
          paste -sd " "
        );
        if [ -z "$MENTIONS" ]; then
          MENTIONS="담당자가 지정되지 않았습니다."
        fi

        TIMESTAMP=$(date --utc +%Y-%m-%dT%H:%M:%SZ)

        echo "PROBLEM=$PROBLEM" >> $GITHUB_ENV;
        echo "USERNAME=$USERNAME" >> $GITHUB_ENV;
        echo "AVATAR_URL=$AVATAR_URL" >> $GITHUB_ENV;
        echo "TITLE=$TITLE" >> $GITHUB_ENV;
        echo "URL=$URL" >> $GITHUB_ENV;
        echo "MENTIONS=$MENTIONS" >> $GITHUB_ENV;
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV;

    - shell: bash
      env:
        DATA: |
          {
            "username": "${{ env.USERNAME }}",
            "avatar_url": "${{ env.AVATAR_URL }}",
            "embeds": [
              {
                "title": "📌 Pull Request: ${TITLE}",
                "description": "새로운 PR이 생성되었습니다! 아래의 정보를 확인하세요.",
                "url": "${URL}",
                "color": 3066993,
                "fields": [
                  {
                    "name": "🔗 문제 URL",
                    "value": "${PROBLEM}",
                    "inline": false
                  },
                  {
                    "name": "👤 작성자",
                    "value": "${USERNAME}",
                    "inline": true
                  },
                  {
                    "name": "📅 생성 날짜",
                    "value": "$(date +'%Y-%m-%d')",
                    "inline": true
                  },
                  {
                    "name": "🛠️ 담당자",
                    "value": "${MENTIONS}",
                    "inline": false
                  }
                ],
                "footer": {
                  "text": "PR Notification Bot • Team Retrip",
                  "icon_url": "https://i.imgur.com/AfFp7pu.png"
                },
                "timestamp": "${TIMESTAMP}"
              }
            ]
          }
      run: |
        echo "$DATA" | jq . > /tmp/json_data.json
        curl -X POST -H 'Content-type:application/json' --data @/tmp/json_data.json ${{ inputs.discord_webhook_url }}

